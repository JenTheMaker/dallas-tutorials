{
  "version": "1.0.0",
  "cells": [
    {
      "type": "cs",
      "input": "importFiles"
    },
    {
      "type": "cs",
      "input": "importFiles [ \"/Volumes/H2OTOUR/Datasets/loan.csv\" ]"
    },
    {
      "type": "cs",
      "input": "setupParse source_frames: [ \"nfs://Volumes/H2OTOUR/Datasets/loan.csv\" ]"
    },
    {
      "type": "cs",
      "input": "parseFiles\n  source_frames: [\"nfs://Volumes/H2OTOUR/Datasets/loan.csv\"]\n  destination_frame: \"loan.hex\"\n  parse_type: \"CSV\"\n  separator: 44\n  number_columns: 15\n  single_quotes: false\n  column_names: [\"loan_amnt\",\"term\",\"int_rate\",\"emp_length\",\"home_ownership\",\"annual_inc\",\"purpose\",\"addr_state\",\"dti\",\"delinq_2yrs\",\"revol_util\",\"total_acc\",\"bad_loan\",\"longest_credit_length\",\"verification_status\"]\n  column_types: [\"Numeric\",\"Enum\",\"Numeric\",\"Numeric\",\"Enum\",\"Numeric\",\"Enum\",\"Enum\",\"Numeric\",\"Numeric\",\"Numeric\",\"Numeric\",\"Enum\",\"Numeric\",\"Enum\"]\n  delete_on_done: true\n  check_header: 1\n  chunk_size: 544659"
    },
    {
      "type": "cs",
      "input": "getFrameSummary \"loan.hex\""
    },
    {
      "type": "cs",
      "input": "getColumnSummary \"loan.hex\", \"emp_length\""
    },
    {
      "type": "cs",
      "input": "getColumnSummary \"loan.hex\", \"bad_loan\""
    },
    {
      "type": "cs",
      "input": "assist splitFrame, \"loan.hex\""
    },
    {
      "type": "cs",
      "input": "splitFrame \"loan.hex\", [0.8], [\"loan.hex_0.80\",\"loan.hex_0.20\"], 956394"
    },
    {
      "type": "cs",
      "input": "getFrameSummary \"loan.hex_0.80\""
    },
    {
      "type": "cs",
      "input": "assist buildModel, null, training_frame: \"loan.hex_0.80\""
    },
    {
      "type": "cs",
      "input": "buildModel 'glm', {\"model_id\":\"GLM_BadLoan\",\"training_frame\":\"loan.hex_0.80\",\"validation_frame\":\"loan.hex_0.20\",\"nfolds\":0,\"seed\":-1,\"response_column\":\"bad_loan\",\"ignored_columns\":[],\"ignore_const_cols\":true,\"family\":\"binomial\",\"solver\":\"AUTO\",\"alpha\":[],\"lambda\":[],\"lambda_search\":false,\"standardize\":true,\"non_negative\":false,\"score_each_iteration\":false,\"compute_p_values\":false,\"remove_collinear_columns\":false,\"max_iterations\":-1,\"link\":\"family_default\",\"max_runtime_secs\":0,\"missing_values_handling\":\"MeanImputation\",\"intercept\":true,\"objective_epsilon\":-1,\"beta_epsilon\":0.0001,\"gradient_epsilon\":-1,\"prior\":-1,\"max_active_predictors\":-1}"
    },
    {
      "type": "cs",
      "input": "assist buildModel, null, training_frame: \"loan.hex_0.80\""
    },
    {
      "type": "cs",
      "input": "getModel \"GLM_BadLoan\""
    },
    {
      "type": "cs",
      "input": "buildModel 'gbm', {\"model_id\":\"GBM_BadLoan\",\"training_frame\":\"loan.hex_0.80\",\"validation_frame\":\"loan.hex_0.20\",\"nfolds\":0,\"response_column\":\"bad_loan\",\"ignored_columns\":[],\"ignore_const_cols\":true,\"ntrees\":\"100\",\"max_depth\":5,\"min_rows\":10,\"nbins\":20,\"seed\":-1,\"learn_rate\":\"0.05\",\"sample_rate\":1,\"col_sample_rate\":1,\"score_each_iteration\":false,\"score_tree_interval\":0,\"balance_classes\":false,\"nbins_top_level\":1024,\"nbins_cats\":1024,\"r2_stopping\":1.7976931348623157e+308,\"stopping_rounds\":0,\"stopping_metric\":\"AUTO\",\"stopping_tolerance\":0.001,\"max_runtime_secs\":0,\"learn_rate_annealing\":1,\"distribution\":\"AUTO\",\"huber_alpha\":0.9,\"checkpoint\":\"\",\"col_sample_rate_per_tree\":1,\"min_split_improvement\":0.00001,\"histogram_type\":\"AUTO\",\"categorical_encoding\":\"AUTO\",\"build_tree_one_node\":false,\"sample_rate_per_class\":[],\"col_sample_rate_change_per_level\":1,\"max_abs_leafnode_pred\":1.7976931348623157e+308,\"pred_noise_bandwidth\":0}"
    },
    {
      "type": "cs",
      "input": "getModel \"GBM_BadLoan\""
    },
    {
      "type": "cs",
      "input": "predict"
    },
    {
      "type": "cs",
      "input": "predict model: \"GLM_BadLoan\", frame: \"loan.hex_0.20\", predictions_frame: \"pred_glm\""
    },
    {
      "type": "cs",
      "input": "getFrameSummary \"pred_glm\""
    },
    {
      "type": "cs",
      "input": "getFrameData \"pred_glm\""
    }
  ]
}